#!/bin/bash
clear

if [[ ! -f "$HOME/.bash_profile" ]]; then
    touch "$HOME/.bash_profile"
fi

if [ -f "$HOME/.bash_profile" ]; then
    source $HOME/.bash_profile
fi

logo_nodesync(){

clear

 cat << "EOF"
=========================================================================
     _   _           _       ____
    | \ | |         | |     / ___|
    |  \| | ___   __| | ___| (__  _   _ ___    __   _____  ___  ___
    |     |/ _ \ / _  |/ __\\__ \| | | |  _ \ / _| |_   _|/ _ \|  _ \
    | |\  | (_) | (_) | /o_ ___) | |_| | | | | (_ _  | | | (_) | |_) |
    |_| \_|\___/ \____|\___|____/ \__  |_| |_|\__(_) |_|  \___/|  _ /
                                    _/ |                       | |
                                   |__/                        |_|

=========================================================================
             Developed by: NodeSync.Top
             Twitter: https://twitter.com/nodesync_top
             Telegram: https://t.me/nodesync_top
=========================================================================
EOF

}

logo_nodesync;



echo "===========Side Protocol Install Easy======= " && sleep 1

read -p "Do you want run node Side Protocol ? (y/n): " choice

if [ "$choice" == "y" ]; then

#Update packages & Install dependencies
sudo apt update && sudo apt upgrade -y
sudo apt install curl git wget htop tmux build-essential jq make lz4 gcc unzip -y

#Install GO
ver="1.21.4"
wget "https://golang.org/dl/go$ver.linux-amd64.tar.gz"
sudo rm -rf /usr/local/go
sudo tar -C /usr/local -xzf "go$ver.linux-amd64.tar.gz"
rm "go$ver.linux-amd64.tar.gz"
echo "export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin" >> $HOME/.bash_profile
source $HOME/.bash_profile
go version


#Download and build binaries
cd $HOME
rm -rf sidechain
git clone -b dev https://github.com/sideprotocol/sidechain.git
cd sidechain
git checkout v0.6.0
make install
sided version

#Initialize Node
cd $HOME
#rm -rf $HOME/.side/config/genesis.json
sided init MyNode --chain-id=side-testnet-2

cd $HOME
#Download genesis and addrbook
              
curl -Ls https://raw.githubusercontent.com/lthuan2011/Side-Protocol/main/genesis.json > $HOME/.side/config/genesis.json

curl -Ls https://raw.githubusercontent.com/lthuan2011/Side-Protocol/main/addrbook.json > $HOME/.side/config/addrbook.json


#Config pruning
cd $HOME
sed -i \
  -e 's|^pruning *=.*|pruning = "custom"|' \
  -e 's|^pruning-keep-recent *=.*|pruning-keep-recent = "100"|' \
  -e 's|^pruning-keep-every *=.*|pruning-keep-every = "0"|' \
  -e 's|^pruning-interval *=.*|pruning-interval = "10"|' \
  $HOME/.side/config/app.toml
  
indexer="null" && \
sed -i -e "s/^indexer *=.*/indexer = \"$indexer\"/" $HOME/.side/config/config.toml

sed -i 's|^minimum-gas-prices *=.*|minimum-gas-prices = "0.0005uside"|g' $HOME/.side/config/app.toml


#Create service
              
sudo tee /etc/systemd/system/sided.service > /dev/null << EOF
[Unit]
Description=sided 
After=network-online.target
[Service]
User=$USER
ExecStart=$(which sided) start
Restart=on-failure
RestartSec=10
LimitNOFILE=10000
[Install]
WantedBy=multi-user.target
EOF

#Download latest snapshot
#curl -L https://services.bccnodes.com/testnets/side/side.tar.lz4| tar -Ilz4 -xf - -C $HOME/.sidechain
source $HOME/.bash_profile
#Start service

cd $HOME

cp $HOME/.side/data/priv_validator_state.json $HOME/.side/priv_validator_state.json.backup


sudo systemctl stop sided

sided tendermint unsafe-reset-all --home ~/.side/ --keep-addr-book

SNAP_RPC="https://rpc-t.side.nodestake.org:443"

LATEST_HEIGHT=$(curl -s $SNAP_RPC/block | jq -r .result.block.header.height); \

BLOCK_HEIGHT=$((LATEST_HEIGHT - 1000)); \

TRUST_HASH=$(curl -s "$SNAP_RPC/block?height=$BLOCK_HEIGHT" | jq -r .result.block_id.hash)

sed -i.bak -E "s|^(enable[[:space:]]+=[[:space:]]+).*$|\1true| ; \

s|^(rpc_servers[[:space:]]+=[[:space:]]+).*$|\1\"$SNAP_RPC,$SNAP_RPC\"| ; \

s|^(trust_height[[:space:]]+=[[:space:]]+).*$|\1$BLOCK_HEIGHT| ; \

s|^(trust_hash[[:space:]]+=[[:space:]]+).*$|\1\"$TRUST_HASH\"|" ~/.side/config/config.toml

more ~/.side/config/config.toml | grep 'rpc_servers'

more ~/.side/config/config.toml | grep 'trust_height'

more ~/.side/config/config.toml | grep 'trust_hash'

rm -rf ~/.side/wasm

curl -o - -L https://ss-t.side.nodestake.org/wasm.tar.lz4 | lz4 -dc - | tar -xf - -C $HOME/.side
                          
mv $HOME/.side/priv_validator_state.json.backup $HOME/.side/data/priv_validator_state.json

#peers=$(curl -s https://raw.githubusercontent.com/lthuan2011/Side-Protocol/main/peers.txt)

#sed -i.bak -e "s/^persistent_peers *=.*/persistent_peers = \"$peers\"/" ~/.side/config/config.toml

       
sudo systemctl daemon-reload
sudo systemctl enable sided
sudo systemctl start sided

echo -e "\e[1;32m Check status: \e[0m\e[1;36m${CYAN} sudo systemctl status sided ${NC}\e[0m"
echo -e "\e[1;32m Check logs: \e[0m\e[1;36m${CYAN} sudo journalctl -u sided  -f -o cat ${NC}\e[0m"
fi
 
